unit USearchEmp;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, DBGrids, StdCtrls, Buttons, ExtCtrls, ComCtrls, ToolWin,
  DB, MemDS, VirtualTable, ZAbstractRODataset, ZAbstractDataset, ZDataset,
  ZConnection, Excels;

type
  TfmSearchEmp = class(TForm)
    ToolBar1: TToolBar;
    btnInquiry: TToolButton;
    btnClose: TToolButton;
    gb_cd_save: TGroupBox;
    Label6: TLabel;
    Image1: TImage;
    Image3: TImage;
    Image30: TImage;
    edtCond: TEdit;
    cbEmpAb: TComboBox;
    grdMember: TDBGrid;
    StatusBar1: TStatusBar;
    Label1: TLabel;
    vtMember: TVirtualTable;
    dsMember: TDataSource;
    vtPost: TVirtualTable;
    cbAb: TComboBox;
    vtCompany: TVirtualTable;
    cbOCode: TComboBox;
    Image2: TImage;
    Label2: TLabel;
    cbBCode: TComboBox;
    edtPostName: TEdit;
    edtPostCode: TEdit;
    btnPostSearch: TSpeedButton;
    btnExcel: TToolButton;
    ToolButton2: TToolButton;
    Excel1: TExcel;
    Image4: TImage;
    Label3: TLabel;
    Image5: TImage;
    rbNewEmp: TRadioButton;
    rbNoExistGroupHis: TRadioButton;
    btnCancel: TButton;

    procedure FormCreate(Sender: TObject);
    procedure btnCloseClick(Sender: TObject);
    procedure btnInquiryClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    //procedure grdMemberDblClick(Sender: TObject);
    procedure edtCondKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure grdMemberTitleClick(Column: TColumn);
    procedure btnPostSearchClick(Sender: TObject);
    procedure cbOCodeChange(Sender: TObject);
    procedure grdMemberDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure btnExcelClick(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
    procedure grdMemberCellClick(Column: TColumn);
    procedure grdMemberKeyPress(Sender: TObject; var Key: Char);
    procedure FormActivate(Sender: TObject);

  private
    ashSql, ashStr: String;

  public
    { Public declarations }
    procedure MouseWheelHandler(var Message: TMessage); override;
  end;
  
var
  fmSearchEmp: TfmSearchEmp;
  arrEmpInfo: array[0..8] of String;
  isScroll: Boolean;
  searchYn: Boolean = False;
  inquiryYn: Boolean = False;
  empNm: String;

implementation

uses coop_utils, coophr_utils, coop_sql_updel, Unit1, USearchPost;

{$R *.dfm}

var colIdx0: Integer; titleCaption0: String;

procedure TfmSearchEmp.MouseWheelHandler(var Message: TMessage);
begin
  if Message.msg = WM_MOUSEWHEEL then
  begin
    if (ActiveControl is TDBgrid) then
    begin
      if Message.wParam > 0 then
      begin
        keybd_event(VK_UP, VK_UP, 0, 0);
      end
      else if Message.wParam < 0 then
      begin
        keybd_event(VK_DOWN, VK_DOWN, 0, 0);
      end;
    end;
  end;
end;

procedure TfmSearchEmp.FormCreate(Sender: TObject);
begin
  // ShowMessage 숨김현상 방지
  Screen.OnActiveFormChange := Form1.OnScreenActiveFormChange;

  // 재직상태코드 콤보박스에 세팅
  setCbCommCode(Form1.qrysql, Form1.vtTemp, 'hr_emp_ab', 'A', cbEmpAb);
  cbAb.ItemIndex := 0;

  // 사용자의 권한 있는 소속, 부서 콤보박스에 세팅
  setCbCode(Form1.db_coophr, Form1.qrysql, 'o_code' , 'A', cbOCode); // 소속
  setCbCode(Form1.db_coophr, Form1.qrysql, 'b_code', 'A', cbBCode); // 사업장
  //setCbCode(Form1.qrysql, 'post_code' , 'A', cbPostCode);

  // 사원상태 초기값 - 재직자
  cbEmpAb.ItemIndex := 1;

  // 정렬 컬럼 초기화
  colIdx0 := 0;
  titleCaption0 := grdMember.Columns[0].Title.Caption;
end;

procedure TfmSearchEmp.FormActivate(Sender: TObject);
begin
  // 사원입력 확인
  if isEmpty(empNm) then
  begin
    edtCond.Text := empNm;
    try
      StrToInt(empNm);
      cbAb.ItemIndex := 1;
    except
      cbAb.ItemIndex := 0;
    end;
  end;
  {if isEmpty(Form1.edtMCode.Text) then
    edtCond.Text := Form1.edtMCode.Text;
  }
  {if isEmpty(edtCond.Text) then
  begin
    try
      StrToInt(Copy(edtCond.Text,3,Length(Trim(edtCond.Text))-1));
      cbAb.ItemIndex := 1;
    except
      cbAb.ItemIndex := 0;
    end;
  end;
  }
  //if Length(empNm) > 3 then searchYn := True else searchYn := False;
  if searchYn then
  begin
    btnInquiryClick(btnInquiry);
    grdMember.SetFocus;
    searchYn := False;
  end
  else
    edtCond.SetFocus;
end;

// 조회
procedure TfmSearchEmp.btnInquiryClick(Sender: TObject);
var
  empCond, oCodeCond, bCodeCond: String; // 조회조건
  subSqlEmpCond, subSqlOCode, subSqlBCode, subSqlPostCode, subSqlEmpAb: String;
  i: Integer;
begin
  // 조회조건 쿼리 *************************************************************
  empCond := Trim(edtCond.Text);
  oCodeCond := ''; bCodeCond := '';
  subSqlEmpCond := ''; subSqlOCode := ''; subSqlBCode := ''; subSqlPostCode := ''; subSqlEmpAb := '';

  if (not rbNewEmp.Checked) and (not rbNoExistGroupHis.Checked) then
  begin
    // 조회조건에서 소속, 사업장, 부서, 사원(사원명 2글자이상) 중 하나이상 선택 필수
    if (cbOCode.ItemIndex = 0) and (cbBCode.ItemIndex = 0) and (not isEmpty(edtPostCode.Text)) and (Length(empCond) < 4) then
    begin
      ShowMessage('소속, 사업장, 부서, 사원 중 하나이상은 필수 선택 조건입니다.');
      edtCond.SetFocus;
      {if cbOCode.ItemIndex = 0 then
      begin
        cbOCode.SetFocus;
        SendMessage(cbOCode.Handle, CB_SHOWDROPDOWN, Integer(true), 0);
      end;
      }
      Exit;
    end;
  end;

  // 사원명 또는 사원번호
  if (cbAb.ItemIndex = 0) and isEmpty(empCond) then // 사원명
  begin
    subSqlEmpCond := ' AND hr_members.hr_m_name LIKE "%' + empCond + '%"';
  end
  else if (cbAb.ItemIndex = 1) and isEmpty(empCond) then  // 사원번호
    subSqlEmpCond := ' AND hr_members.hr_m_code LIKE "%' + empCond + '%"';

  // 채용연동 신규입사자 조회
  if rbNewEmp.Checked then
  begin
    ashSql := 'SELECT hr_m_name'
            + ', hr_members.hr_m_code'
            + ', m_code'
            + ', "" hr_o_code'
            + ', "" hr_o_name'
            + ', "" hr_b_code'
            + ', "" hr_b_name'
            + ', "" hr_post_code'
            + ', "" AS hr_post_name'
            + ', "" AS hr_sal_type_ab_val'
            + ', hr_members.hr_emp_ab'
            + ', (SELECT hr_code_value_name FROM hr_common_code_value WHERE hr_code_id = "hr_emp_ab" AND hr_code_value = hr_members.hr_emp_ab AND hr_use_yn = "Y") AS hr_emp_ab_val'
            + ' FROM hr_members'
            + ' LEFT OUTER JOIN hr_group_his'
            + ' ON hr_members.hr_m_code = hr_group_his.hr_m_code'
            + ' WHERE history LIKE "채용연동%"'
            + subSqlEmpCond
            + ' AND hr_group_his.hr_o_code IS NULL';
  end
  else if rbNoExistGroupHis.Checked then
  begin
    if (cbEmpAb.ItemIndex = 1) then // 1:재직자 선택 시 재입사자 같이 조회
      subSqlEmpAb := ' AND hr_emp_ab IN ("1", "3")'  // 1:재직자, 3:재입사자

    else if (cbEmpAb.ItemIndex in [2,4]) then  // 2:퇴사자, 4:재입사금지대상
      subSqlEmpAb := ' AND hr_emp_ab = "' + subStr(cbEmpAb.Text, 1, ' ') + '"'

    else if (cbEmpAb.ItemIndex = 3) then  // 3:재입사자
      subSqlEmpAb := ' AND hr_emp_ab = "' + subStr(cbEmpAb.Text, 1, ' ') + '"'
    else
      subSqlEmpAb := '';

    subSqlOCode := '';
    if cbOCode.ItemIndex <> 0 then
    begin
      subSqlOCode := ' AND hr_members.hr_m_code LIKE "' + copy(cbOCode.Text, 3, 2) + '%"';
    end;

    ashSql := 'SELECT hr_m_name'
            + ', hr_members.hr_m_code'
            + ', m_code'
            + ', "" hr_o_code'
            + ', "" hr_o_name'
            + ', "" hr_b_code'
            + ', "" hr_b_name'
            + ', "" hr_post_code'
            + ', "" AS hr_post_name'
            + ', "" AS hr_sal_type_ab_val'
            + ', hr_members.hr_emp_ab'
            + ', (SELECT hr_code_value_name FROM hr_common_code_value WHERE hr_code_id = "hr_emp_ab" AND hr_code_value = hr_members.hr_emp_ab AND hr_use_yn = "Y") AS hr_emp_ab_val'
            + ' FROM hr_members'
            + ' LEFT OUTER JOIN hr_group_his'
            + ' ON hr_members.hr_m_code = hr_group_his.hr_m_code'
            + ' AND hr_group_his.hr_update_yn = "N"'
            + ' WHERE 1=1'
            + subSqlEmpCond
            + subSqlEmpAb
            + ' AND hr_group_his.hr_o_code IS NULL';
  end
  else
  begin
    // 상태코드
    {if (cbEmpAb.ItemIndex = 0) then
      subSqlEmpAb := ' AND hr_group_his.hr_ab <> "B"' // 구분코드 - B:퇴사 (2:퇴사자, 4:재입사금지대상, 소속법인변동 포함)
    else
    }if (cbEmpAb.ItemIndex = 1) then // 1:재직자 선택 시 재입사자 같이 조회
      subSqlEmpAb := ' AND hr_members.hr_emp_ab IN ("1", "3")'  // 1:재직자, 3:재입사자
                   + ' AND hr_group_his.hr_ab NOT IN ("B", "E")'
    else if (cbEmpAb.ItemIndex in [2,4]) then  // 2:퇴사자, 4:재입사금지대상
      subSqlEmpAb := ' AND hr_members.hr_emp_ab = "' + subStr(cbEmpAb.Text, 1, ' ') + '"'

    else if (cbEmpAb.ItemIndex = 3) then  // 3:재입사자
      subSqlEmpAb := ' AND hr_members.hr_emp_ab = "' + subStr(cbEmpAb.Text, 1, ' ') + '"'
                   + ' AND hr_group_his.hr_ab NOT IN ("B", "E")'
    else
      subSqlEmpAb := '';

    // 사업장 선택 시
    if cbBCode.ItemIndex <> 0 then
    begin
      subSqlBCode := ' AND (hr_group_his.hr_b_code = "' + copy(cbBCode.Text, 6, 3) + '")'
    end
    // 사업장 전체
    else
    begin
      // 소속법인 전체
      if cbOCode.ItemIndex = 0 then
      begin
        {for i := 1 to cbOCode.Items.Count - 1 do
        begin
          if oCodeCond = '' then
            oCodeCond := '"' + subStr(cbOCode.Items[i], 1, ' ') + '"'
          else oCodeCond :=  oCodeCond + ',"' + subStr(cbOCode.Items[i], 1, ' ')+ '"';
        end;
        }
        if cbBCode.Items.Count > 1 then
        begin
          for i := 1 to cbBCode.Items.Count - 1 do
          begin
            if bCodeCond = '' then
              bCodeCond:= '"' + copy(cbBCode.Items[i], 6, 3) + '"'
            else bCodeCond :=  bCodeCond + ',"' + copy(cbBCode.Items[i], 6, 3) + '"';
          end;

          subSqlBCode := ' AND hr_group_his.hr_B_code IN (' + bCodeCond  + ')';
        end;
      end
      // 소속법인 선택 시
      else
      begin
        subSqlOCode := ' AND hr_group_his.hr_o_code = "' + copy(cbOCode.Text, 1, 4) + '"';
      end;
    end;

    // 부서 선택 시
    if Length(Trim(edtPostCode.Text)) = 4 then
    begin
      subSqlPostCode := ' AND hr_group_his.hr_post_code = "' + Trim(edtPostCode.Text) + '"';
    end;

    {
    if cbPostCode.Items.Count > 1 then // 조회권한 부서 하나 이상이면
    begin
      if cbPostCode.ItemIndex = 0 then // 전체
      begin
        for i := 1 to cbPostCode.Items.Count - 1 do
        begin
          if postCodeCond = '' then
            postCodeCond := '"' + subStr(cbPostCode.Items[i], 1, ' ') + '"'
          else postCodeCond :=  postCodeCond + ',"' + subStr(cbPostCode.Items[i], 1, ' ')+ '"';
        end;

        if cbOCode.Items.Count > 1 then
          if cbOCode.ItemIndex > 0 then
            subSqlPostCode := ' AND hr_group_his.hr_post_code IN (' + postCodeCond + '))'
          else
            subSqlPostCode := ' OR hr_group_his.hr_post_code IN (' + postCodeCond + '))'
        else
          subSqlPostCode := ' AND hr_group_his.hr_post_code IN (' + postCodeCond + ')';
      end
      else
      begin
        subSqlPostCode := ' AND hr_group_his.hr_post_code = "' + subStr(cbPostCode.Text, 1, ' ') + '")';
      end;
    end;
    }
    // ***************************************************************************
    ashSql := 'SELECT'
            + ' hr_members.hr_m_name'
            + ', hr_members.hr_m_code'
            + ', hr_members.m_code'
            //+ ', hr_group_his.hr_o_code'
            + ', IFNULL(hr_group_his.hr_o_code, "") hr_o_code'
            + ', IFNULL((SELECT hr_o_name FROM hr_company WHERE hr_o_code = hr_group_his.hr_o_code), "") hr_o_name'
            //+ ', hr_group_his.hr_b_code'
            + ', IFNULL(hr_group_his.hr_b_code, "") hr_b_code'
            + ', IFNULL((SELECT hr_b_name FROM hr_branch WHERE hr_b_code = hr_group_his.hr_b_code), "") hr_b_name'
            + ', hr_group_his.hr_post_code'
            + ', "                              " AS hr_post_name'
            //+ ', IFNULL((SELECT post_name FROM admin_post WHERE post_code = hr_group_his.hr_post_code), "") hr_post_name'
            //+ ', hr_group_his.hr_sal_type_ab'
            + ', (SELECT hr_code_value_name FROM hr_common_code_value'
            +     ' WHERE hr_code_id = "hr_sal_type_ab" AND hr_code_value = hr_group_his.hr_sal_type_ab'
            +     ' AND hr_use_yn = "Y") AS hr_sal_type_ab_val'
            + ', hr_members.hr_emp_ab'
            + ', (SELECT hr_code_value_name FROM hr_common_code_value'
            +     ' WHERE hr_code_id = "hr_emp_ab" AND hr_code_value = hr_members.hr_emp_ab'
            +     ' AND hr_use_yn = "Y") AS hr_emp_ab_val'
            + ' FROM hr_members'
            + ' INNER JOIN hr_group_his'
            + ' ON hr_members.hr_m_code = hr_group_his.hr_m_code'
            + ' WHERE 1=1'
            + subSqlEmpCond
            + subSqlEmpAb
            + subSqlOCode
            + subSqlBCode
            + subSqlPostCode
            + ' AND (hr_o_code, hr_seq_no) IN (SELECT hr_o_code, MAX(hr_seq_no) FROM hr_group_his'
                                              + ' WHERE hr_m_code = hr_members.hr_m_code'
                                              + subSqlOCode
                                              //+ subSqlBCode
                                              //+ subSqlPostCode
                                              + ' AND hr_update_yn = "N"'
                                              + ' GROUP BY hr_o_code, hr_m_code)'
            + ' AND hr_update_yn = "N"';
            //+ ' AND hr_group_his.hr_ab NOT IN ("B", "E")'; // 구분코드 - B:퇴사, E:임시직종료

  end;

  ashStr := MySQL_Assign(Form1.db_coophr, Form1.qrysql, ashSql, vtMember);
  try
    StrToInt(ashStr);
  except
    ShowMessage('오류가 발생하였습니다.[' + ashStr + '](ERR:사원조회)');
    Exit;
  end;

  if vtMember.RecordCount > 0 then
  begin
    // 부서명
    vtMember.DisableControls;
    vtMember.First;
    while not vtMember.Eof do
    begin
      if Form1.vtPost.Locate('post_code', vtMember.FieldByName('hr_post_code').AsString, []) then
      begin
        vtMember.Edit;
        vtMember.FieldByName('hr_post_name').ReadOnly := False;
        vtMember.FieldByName('hr_post_name').AsString := Form1.vtPost.FieldByName('post_name').AsString;
      end;
      vtMember.Next;
    end;
    vtMember.First;
    vtMember.EnableControls;
  end;

  if vtMember.RecordCount = 1 then // 검색사원이 1명이면
  begin
   //grdMemberDblClick(grdMember);
  end
  else if vtMember.RecordCount < 1 then
  begin
    //Application.Title := '사원검색';
    ShowMessage('조회권한이 없거나 검색결과가 없습니다.');
  end;
end;

// 종료버튼 클릭 시
procedure TfmSearchEmp.btnCloseClick(Sender: TObject);
begin
  cbAb.ItemIndex := 0;
  edtCond.Text := '';
  cbOCode.ItemIndex := 0;
  cbBCode.ItemIndex := 0;
  cbEmpAb.ItemHeight := 1;
  edtPostName.Text := '';
  edtPostCode.Text := '';
  rbNewEmp.Checked := False;
  rbNoExistGroupHis.Checked := False;
  Close;
end;

procedure TfmSearchEmp.grdMemberKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    grdMemberCellClick(nil);
end;

// 사원 그리드 더블클릭 시 모달리스 창으로 사원정보 전달
//procedure TfmSearchEmp.grdMemberDblClick(Sender: TObject);
procedure TfmSearchEmp.grdMemberCellClick(Column: TColumn);
{var
  oCodeStaffYn, postCodeStaffYn: String; // 법인권한유무, 부서권한유무
  }
begin
  if vtMember.RecordCount > 0 then
  begin
    {
    // 사용자권한 법인, 부서
    getSustaff(Form1.qrysql, vtCompany, 'hr_o_code', mpst_code);
    getSustaff(Form1.qrysql, vtPost, 'hr_post_code', mpst_code);

    // 사용자권한 유무
    oCodeStaffYn := getStaffYn(vtCompany, 'hr_o_code', vtMember.FieldByName('hr_o_code').AsString);
    postCodeStaffYn := getStaffYn(vtPost, 'hr_post_code', vtMember.FieldByName('hr_post_code').AsString);

    if (oCodeStaffYn = 'Y') or (postCodeStaffYn = 'Y') then
    begin
    }
      {
      [0] 사원번호
      [1] 사원명
      [2] 조합원코드
      [3] 회사코드
      [4] 회사명
      [5] 부서코드
      [6] 부서명
      [7] 상태코드
      [8] 상태코드값
      }
      arrEmpInfo[0] := vtMember.FieldByName('hr_m_code').AsString;
      arrEmpInfo[1] := vtMember.FieldByName('hr_m_name').AsString;
      arrEmpInfo[2] := vtMember.FieldByName('m_code').AsString;
      arrEmpInfo[3] := vtMember.FieldByName('hr_o_code').AsString;
      arrEmpInfo[4] := vtMember.FieldByName('hr_o_name').AsString;
      arrEmpInfo[5] := vtMember.FieldByName('hr_post_code').AsString;
      //arrEmpInfo[6] := vtMember.FieldByName('hr_post_name').AsString;
      arrEmpInfo[7] := vtMember.FieldByName('hr_emp_ab').AsString;
      arrEmpInfo[8] := vtMember.FieldByName('hr_emp_ab_val').AsString;

      //Form1.edtMCode.Text := arrEmpInfo[0];
      //Form1.edtMName.Text := arrEmpInfo[1];
      //Form1.btnInquiryClick(Form1.btnInquiry);

      inquiryYn := True;
      Form1.btnEmpSearchClick(Form1.btnEmpSearch);
      //SetWindowPos(Form1.Handle, HWND_TOP, 0,0,0,0, SWP_NOMOVE or SWP_NOSIZE);
      //Form1.edtMName.SetFocus;

      //ModalResult := mrOk;
    {end
    else
    begin
      //Application.Title := '사원검색';
      ShowMessage('선택한 사원의 조회권한이 없습니다.');
      Exit;
    end;
    }
  end;                                                                                 
end;

procedure TfmSearchEmp.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if (Shift = [ssAlt]) or (Shift = [ssCtrl]) then
    Exit;

  case Key of
    VK_RIGHT: // VK_RIGHT 오른쪽커서 이동키
      begin
        SelectNext(ActiveControl, True, True);
        key := 0;
      end;
    VK_RETURN:
      begin
        SelectNext(ActiveControl, True, True);
        key := 0;
      end;
    VK_F1:
      begin
        ShowMessage('F1');
        Key := 0;
      end;
    VK_F9:
      begin
        if btnInquiry.Enabled then
          btnInquiryClick(btnInquiry);
        Key := 0;
      end;
    VK_ESCAPE: // ESC 키
      begin
        if btnClose.Enabled then
          btnCloseClick(btnClose);
        Key := 0;
      end;
  end;
end;

// FormClose
procedure TfmSearchEmp.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  vtMember.Close;
  Form1.db_coophr.Disconnect;
  //Action := caFree;
end;

// 조회조건 사원명 edit에서 엔터 키로 조회
procedure TfmSearchEmp.edtCondKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    btnInquiryClick(btnInquiry);
  end;
end;

// 그리드 타이틀 클릭 시 정렬
procedure TfmSearchEmp.grdMemberTitleClick(Column: TColumn);
var
  colIdx: Integer;
  titleCaption, colName: String;
begin
  if (vtMember.RecordCount > 1) and (Column.Index <> 0) then
  begin
    colIdx := Column.Index;
    titleCaption := Column.Title.Caption;
    colName := Column.FieldName;

    if vtMember.IndexFieldNames = colName then // ASC
    begin
      vtMember.IndexFieldNames := colName + ' DESC';
      grdMember.Columns[colIdx].Title.Caption := titleCaption0 + '▼';
    end
    else if vtMember.IndexFieldNames = colName + ' DESC' then // DESC
    begin
      vtMember.IndexFieldNames := colName;
      grdMember.Columns[colIdx].Title.Caption := titleCaption0 + '▲';
    end
    else
    begin
      grdMember.Columns[colIdx0].Title.Caption := titleCaption0;

      titleCaption0 := titleCaption;
      vtMember.IndexFieldNames := colName;
      grdMember.Columns[colIdx].Title.Caption := titleCaption + '▲';
    end;
    colIdx0 := colIdx;
  end;
end;

// 부서검색 창 출력
procedure TfmSearchEmp.btnPostSearchClick(Sender: TObject);
begin
  with TfmSearchPost.Create(Application) do
  begin
    if ShowModal = mrOK then
    begin
      edtPostCode.Text := arrPostInfo[0];
      edtPostName.Text := arrPostInfo[1];
    end;
    Free;
  end;
end;

// 소속 법인 콤보박스 선택 시
procedure TfmSearchEmp.cbOCodeChange(Sender: TObject);
begin
  if cbOCode.ItemIndex = 0 then
  begin
    setCbCode(Form1.db_coophr, Form1.qrysql, 'b_code', 'S', cbBCode, ''); // 사용자의 법인 권한있는 사업장 조회
  end
  else
  begin
    setCbCode(Form1.db_coophr, Form1.qrysql, 'b_code', 'S', cbBCode, getCommCodeVal(cbOCode)); // 선택 법인의 사업장 조회
  end;
end;

procedure TfmSearchEmp.grdMemberDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
var
  vDbGrid: TDBGrid absolute Sender;
  LeftPos: Integer;
  CellStr: string;
begin
  if DataCol = 0 then
  begin
    //vDbGrid.Canvas.TextOut(Rect.Left + 2, Rect.Top + 2, IntToStr(vDbGrid.DataSource.DataSet.RecNo)); // 왼쪽정렬
    // 가운데정렬
    with vDbGrid.Canvas do
    begin
      CellStr := IntToStr(vDbGrid.DataSource.DataSet.RecNo);
      LeftPos := ((Rect.Right - Rect.Left - TextWidth(CellStr)) div 2) + Rect.Left;
      TextOut(LeftPos, Rect.Top+2, CellStr);
    end;
  end;
end;

// 엑셀 다운로드
procedure TfmSearchEmp.btnExcelClick(Sender: TObject);
var
  x, y, startRow: Integer;
begin
  if (not vtMember.Active) then
  begin
    ShowMessage('조회 후 사용하세요.');
    Exit;
  end
  else if (vtMember.RecordCount = 0) then
  begin
    ShowMessage('조회내역이 없습니다.');
    Exit;
  end;

  Screen.Cursor := crHourGlass;

  startRow := 1;

  Excel1.Connect;
  Excel1.Exec('[WORKBOOK.INSERT(1)]');

  // 그리드 타이틀
  x := startRow;
  for y := 1 to grdMember.FieldCount - 1 do
  begin
    Excel1.PutStr(x, y, grdMember.Columns[y].Title.Caption);
  end;

  // 그리드 내용
  vtMember.First;
  for x := startRow + 1 to vtMember.RecordCount + startRow  do
  begin
    for y := 0 to vtMember.FieldCount - 1 do
    begin
      Excel1.PutStr(x, y+1, '''' + vtMember.Fields[y].AsString);
    end;
    vtMember.Next;
  end;

  Excel1.Disconnect;
  Screen.Cursor := crDefault;
  grdMember.Refresh;
end;

procedure TfmSearchEmp.btnCancelClick(Sender: TObject);
begin
  rbNewEmp.Checked := False;
  rbNoExistGroupHis.Checked := False;
end;

end.
